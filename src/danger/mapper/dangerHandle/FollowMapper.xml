<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="danger.mapper.dangerHandle.FollowMapper" >
  <resultMap id="BaseResultMap" type="danger.bean.dangerHandle.Follow" >
    <id column="followId" property="followid" jdbcType="INTEGER" />
    <result column="sidingId" property="sidingid" jdbcType="INTEGER" />
    <result column="dangerId" property="dangerid" jdbcType="INTEGER" />
    <result column="hasSecurity" property="hassecurity" jdbcType="BIT" />
    <result column="safetyTechnician" property="safetytechnician" jdbcType="VARCHAR" />
    <result column="managerName" property="managername" jdbcType="VARCHAR" />
    <result column="recheckTime" property="rechecktime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    followId, sidingId, dangerId, hasSecurity, safetyTechnician, managerName, recheckTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="danger.bean.dangerHandle.FollowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from follow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from follow
    where followId = #{followid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from follow
    where followId = #{followid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="danger.bean.dangerHandle.FollowExample" >
    delete from follow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="danger.bean.dangerHandle.Follow" >
    insert into follow (followId, sidingId, dangerId, 
      hasSecurity, safetyTechnician, managerName, 
      recheckTime)
    values (#{followid,jdbcType=INTEGER}, #{sidingid,jdbcType=INTEGER}, #{dangerid,jdbcType=INTEGER}, 
      #{hassecurity,jdbcType=BIT}, #{safetytechnician,jdbcType=VARCHAR}, #{managername,jdbcType=VARCHAR}, 
      #{rechecktime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="danger.bean.dangerHandle.Follow" >
    insert into follow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="followid != null" >
        followId,
      </if>
      <if test="sidingid != null" >
        sidingId,
      </if>
      <if test="dangerid != null" >
        dangerId,
      </if>
      <if test="hassecurity != null" >
        hasSecurity,
      </if>
      <if test="safetytechnician != null" >
        safetyTechnician,
      </if>
      <if test="managername != null" >
        managerName,
      </if>
      <if test="rechecktime != null" >
        recheckTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="followid != null" >
        #{followid,jdbcType=INTEGER},
      </if>
      <if test="sidingid != null" >
        #{sidingid,jdbcType=INTEGER},
      </if>
      <if test="dangerid != null" >
        #{dangerid,jdbcType=INTEGER},
      </if>
      <if test="hassecurity != null" >
        #{hassecurity,jdbcType=BIT},
      </if>
      <if test="safetytechnician != null" >
        #{safetytechnician,jdbcType=VARCHAR},
      </if>
      <if test="managername != null" >
        #{managername,jdbcType=VARCHAR},
      </if>
      <if test="rechecktime != null" >
        #{rechecktime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="danger.bean.dangerHandle.FollowExample" resultType="java.lang.Integer" >
    select count(*) from follow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update follow
    <set >
      <if test="record.followid != null" >
        followId = #{record.followid,jdbcType=INTEGER},
      </if>
      <if test="record.sidingid != null" >
        sidingId = #{record.sidingid,jdbcType=INTEGER},
      </if>
      <if test="record.dangerid != null" >
        dangerId = #{record.dangerid,jdbcType=INTEGER},
      </if>
      <if test="record.hassecurity != null" >
        hasSecurity = #{record.hassecurity,jdbcType=BIT},
      </if>
      <if test="record.safetytechnician != null" >
        safetyTechnician = #{record.safetytechnician,jdbcType=VARCHAR},
      </if>
      <if test="record.managername != null" >
        managerName = #{record.managername,jdbcType=VARCHAR},
      </if>
      <if test="record.rechecktime != null" >
        recheckTime = #{record.rechecktime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update follow
    set followId = #{record.followid,jdbcType=INTEGER},
      sidingId = #{record.sidingid,jdbcType=INTEGER},
      dangerId = #{record.dangerid,jdbcType=INTEGER},
      hasSecurity = #{record.hassecurity,jdbcType=BIT},
      safetyTechnician = #{record.safetytechnician,jdbcType=VARCHAR},
      managerName = #{record.managername,jdbcType=VARCHAR},
      recheckTime = #{record.rechecktime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="danger.bean.dangerHandle.Follow" >
    update follow
    <set >
      <if test="sidingid != null" >
        sidingId = #{sidingid,jdbcType=INTEGER},
      </if>
      <if test="dangerid != null" >
        dangerId = #{dangerid,jdbcType=INTEGER},
      </if>
      <if test="hassecurity != null" >
        hasSecurity = #{hassecurity,jdbcType=BIT},
      </if>
      <if test="safetytechnician != null" >
        safetyTechnician = #{safetytechnician,jdbcType=VARCHAR},
      </if>
      <if test="managername != null" >
        managerName = #{managername,jdbcType=VARCHAR},
      </if>
      <if test="rechecktime != null" >
        recheckTime = #{rechecktime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where followId = #{followid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="danger.bean.dangerHandle.Follow" >
    update follow
    set sidingId = #{sidingid,jdbcType=INTEGER},
      dangerId = #{dangerid,jdbcType=INTEGER},
      hasSecurity = #{hassecurity,jdbcType=BIT},
      safetyTechnician = #{safetytechnician,jdbcType=VARCHAR},
      managerName = #{managername,jdbcType=VARCHAR},
      recheckTime = #{rechecktime,jdbcType=TIMESTAMP}
    where followId = #{followid,jdbcType=INTEGER}
  </update>
</mapper>